nimTitle	bytesimpl	_._/pybytes/bytesimpl.html	module src/pylib/pybytes/bytesimpl		0
nim	PyBytes	_._/pybytes/bytesimpl.html#PyBytes	type PyBytes		5
nim	bytes	_._/pybytes/bytesimpl.html#bytes	proc bytes(): PyBytes		7
nim	bytes	_._/pybytes/bytesimpl.html#bytes,string	proc bytes(s: string): PyBytes		8
nim	bytes	_._/pybytes/bytesimpl.html#bytes,openArray[char]	proc bytes(s: openArray[char]): PyBytes		11
nim	bytes	_._/pybytes/bytesimpl.html#bytes,char	proc bytes(c: char): PyBytes		20
nim	bytes	_._/pybytes/bytesimpl.html#bytes,int	proc bytes(nLen: int): PyBytes		22
nim	bytes	_._/pybytes/bytesimpl.html#bytes,Iterable[int]	proc bytes(x: Iterable[int]): PyBytes		33
nim	bytes	_._/pybytes/bytesimpl.html#bytes,Iterable[char]	proc bytes(x: Iterable[char]): PyBytes		37
nim	bytes	_._/pybytes/bytesimpl.html#bytes_2	proc bytes(self: PyBytes): PyBytes		42
nim	bytes	_._/pybytes/bytesimpl.html#bytes,openArray[char]_2	proc bytes(a: openArray[char]): PyBytes		44
nim	pybytes	_._/pybytes/bytesimpl.html#pybytes.t,T	template pybytes[T](x: T): PyBytes		47
nim	`$`	_._/pybytes/bytesimpl.html#$	proc `$`(self: PyBytes): string		51
nim	fspath	_._/pybytes/bytesimpl.html#fspath	proc fspath(self: PyBytes): PyBytes		52
nim	toNimString	_._/pybytes/bytesimpl.html#toNimString.c	converter toNimString(self: PyBytes): string		53
nim	`==`	_._/pybytes/bytesimpl.html#==,,PyBytes	proc `==`(self: PyBytes; o: PyBytes): bool		57
nim	`+`	_._/pybytes/bytesimpl.html#+,,PyBytes	proc `+`(self: PyBytes; o: PyBytes): PyBytes		63
nim	`+`	_._/pybytes/bytesimpl.html#+,,string	proc `+`(self: PyBytes; o: string): PyBytes		64
nim	`+`	_._/pybytes/bytesimpl.html#+,,char	proc `+`(self: PyBytes; o: char): PyBytes		65
nim	`+`	_._/pybytes/bytesimpl.html#+,string,	proc `+`(o: string; self: PyBytes): PyBytes		67
nim	`+`	_._/pybytes/bytesimpl.html#+,char,	proc `+`(o: char; self: PyBytes): PyBytes		68
nim	`+=`	_._/pybytes/bytesimpl.html#+=,,PyBytes	proc `+=`(mself; s: PyBytes)		70
nim	`+=`	_._/pybytes/bytesimpl.html#+=,,char	proc `+=`(mself; s: char)		71
nim	`+=`	_._/pybytes/bytesimpl.html#+=,,string	proc `+=`(mself; s: string)		72
nim	len	_._/pybytes/bytesimpl.html#len	proc len(self: PyBytes): int		75
nim	byteLen	_._/pybytes/bytesimpl.html#byteLen	proc byteLen(self: PyBytes): int		76
nim	substr	_._/pybytes/bytesimpl.html#substr,,int,int	proc substr(self: PyBytes; start, last: int): PyBytes		78
nim	substr	_._/pybytes/bytesimpl.html#substr,,int	proc substr(self: PyBytes; start: int): PyBytes		79
nim	getChar	_._/pybytes/bytesimpl.html#getChar,,int	proc getChar(self: PyBytes; i: int): char		81
nim	hasChar	_._/pybytes/bytesimpl.html#hasChar,PyBytes,char	proc hasChar(a: PyBytes; o: char): bool		83
nim	`[]`	_._/pybytes/bytesimpl.html#[],,int	proc `[]`(self: PyBytes; i: int): int		86
nim	`[]`	_._/pybytes/bytesimpl.html#[],,Slice[int]	proc `[]`(self: PyBytes; i: Slice[int]): PyBytes		90
nim	`[]`	_._/pybytes/bytesimpl.html#[],,HSlice[int,BackwardsIndex]	proc `[]`(self: PyBytes; i: HSlice[int, BackwardsIndex]): PyBytes		96
nim	chars	_._/pybytes/bytesimpl.html#chars.i	iterator chars(self: PyBytes): char		99
nim	items	_._/pybytes/bytesimpl.html#items.i	iterator items(self: PyBytes): int		104
nim	`@`	_._/pybytes/bytesimpl.html#@,PyBytes	proc `@`(self: PyBytes): seq[char]		108
nim	`or`	_._/pybytes/bytesimpl.html#or.t,PyBytes,PyBytes	template `or`(a, b: PyBytes): PyBytes		122
nim	`not`	_._/pybytes/bytesimpl.html#not.t,PyBytes	template `not`(s: PyBytes): bool		127
nimgrp	+=	_._/pybytes/bytesimpl.html#+=-procs-all	proc		70
nimgrp	bytes	_._/pybytes/bytesimpl.html#bytes-procs-all	proc		7
nimgrp	substr	_._/pybytes/bytesimpl.html#substr-procs-all	proc		78
nimgrp	+	_._/pybytes/bytesimpl.html#+-procs-all	proc		63
nimgrp	[]	_._/pybytes/bytesimpl.html#[]-procs-all	proc		86
heading	Mimics Python not str -> bool.	_._/pybytes/bytesimpl.html#mimics-python-not-str-minusgt-booldot	 Mimics Python not str -&gt; bool.		0
